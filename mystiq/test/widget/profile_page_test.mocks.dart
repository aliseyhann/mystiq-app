// Mocks generated by Mockito 5.4.4 from annotations
// in mystiq_fortune_app/test/widget/profile_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mystiq_fortune_app/backend/notification_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationService extends _i1.Mock
    implements _i2.NotificationService {
  MockNotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initialize(String? userEmail) => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [userEmail],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> requestPermission() => (super.noSuchMethod(
        Invocation.method(
          #requestPermission,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> sendNotification({
    required String? userId,
    required String? title,
    required String? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendNotification,
          [],
          {
            #userId: userId,
            #title: title,
            #message: message,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> publishNotification({
    required String? recipientEmail,
    required String? type,
    String? senderName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #publishNotification,
          [],
          {
            #recipientEmail: recipientEmail,
            #type: type,
            #senderName: senderName,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void listenForNotifications(String? userEmail) => super.noSuchMethod(
        Invocation.method(
          #listenForNotifications,
          [userEmail],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> setNotificationsEnabled(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setNotificationsEnabled,
          [enabled],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getNotificationsEnabled() => (super.noSuchMethod(
        Invocation.method(
          #getNotificationsEnabled,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
